// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do:
//
//    using Test;
//
//    var welcome = Welcome.FromJson(jsonString);
#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

namespace rPDU2MQTT.Models.PDU;

using System;
using System.Collections.Generic;

using System.Text.Json;
using System.Text.Json.Serialization;
using System.Globalization;

public partial class DataAlarm
{
    [JsonPropertyName("action")]
    public Action Action { get; set; }

    [JsonPropertyName("validTime")]
    public Action ValidTime { get; set; }

    [JsonPropertyName("trigger")]
    public Action Trigger { get; set; }

    [JsonPropertyName("target")]
    public Dictionary<string, TargetValue> Target { get; set; }
}

public partial class Action
{
}

public partial class TargetValue
{
    [JsonPropertyName("group")]
    public string Group { get; set; }

    [JsonPropertyName("path")]
    public string Path { get; set; }

    [JsonPropertyName("type")]
    public string Type { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }
}

public partial class DataAuth
{
    [JsonPropertyName("guest")]
    public Guest Guest { get; set; }
}

public partial class Guest
{
    [JsonPropertyName("control")]
    public bool Control { get; set; }

    [JsonPropertyName("password")]
    public object Password { get; set; }

    [JsonPropertyName("source")]
    public string Source { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("language")]
    public string Language { get; set; }

    [JsonPropertyName("scope")]
    public object Scope { get; set; }

    [JsonPropertyName("passwordSet")]
    public bool PasswordSet { get; set; }

    [JsonPropertyName("admin")]
    public bool Admin { get; set; }
}

public partial class DataConf
{
    [JsonPropertyName("oneview")]
    public Oneview Oneview { get; set; }

    [JsonPropertyName("display")]
    public Display Display { get; set; }

    [JsonPropertyName("auth")]
    public ConfAuth Auth { get; set; }

    [JsonPropertyName("remoteAuth")]
    public RemoteAuth RemoteAuth { get; set; }

    [JsonPropertyName("contact")]
    public Contact Contact { get; set; }

    [JsonPropertyName("http")]
    public Http Http { get; set; }

    [JsonPropertyName("locale")]
    public Locale Locale { get; set; }

    [JsonPropertyName("network")]
    public Network Network { get; set; }

    [JsonPropertyName("usb")]
    public Usb Usb { get; set; }

    [JsonPropertyName("email")]
    public Email Email { get; set; }

    [JsonPropertyName("ldap")]
    public ConfLdap Ldap { get; set; }

    [JsonPropertyName("report")]
    public Action Report { get; set; }

    [JsonPropertyName("syslog")]
    public Syslog Syslog { get; set; }

    [JsonPropertyName("camera")]
    public Action Camera { get; set; }

    [JsonPropertyName("time")]
    public Time Time { get; set; }

    [JsonPropertyName("ssh")]
    public Ssh Ssh { get; set; }

    [JsonPropertyName("system")]
    public SystemClass System { get; set; }

    [JsonPropertyName("snmp")]
    public Snmp Snmp { get; set; }

    [JsonPropertyName("datalog")]
    public Datalog Datalog { get; set; }

    [JsonPropertyName("serial")]
    public Serial Serial { get; set; }
}

public partial class ConfAuth
{
    [JsonPropertyName("scope")]
    public Action Scope { get; set; }
}

public partial class Contact
{
    [JsonPropertyName("contactEmail")]
    public string ContactEmail { get; set; }

    [JsonPropertyName("contactName")]
    public string ContactName { get; set; }

    [JsonPropertyName("contactPhone")]
    public string ContactPhone { get; set; }

    [JsonPropertyName("location")]
    public string Location { get; set; }

    [JsonPropertyName("description")]
    public string Description { get; set; }
}

public partial class Datalog
{
    [JsonPropertyName("interval")]
    public long Interval { get; set; }
}

public partial class Display
{
    [JsonPropertyName("gmsd")]
    public Gmsd Gmsd { get; set; }
}

public partial class Gmsd
{
    [JsonPropertyName("vlc")]
    public Vlc Vlc { get; set; }

    [JsonPropertyName("inverted")]
    public bool Inverted { get; set; }

    [JsonPropertyName("mode")]
    public string Mode { get; set; }
}

public partial class Vlc
{
    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }
}

public partial class Email
{
    [JsonPropertyName("port")]
    public long Port { get; set; }

    [JsonPropertyName("password")]
    public object Password { get; set; }

    [JsonPropertyName("username")]
    public string Username { get; set; }

    [JsonPropertyName("server")]
    public string Server { get; set; }

    [JsonPropertyName("sender")]
    public string Sender { get; set; }

    [JsonPropertyName("passwordSet")]
    public bool PasswordSet { get; set; }

    [JsonPropertyName("status")]
    public Status Status { get; set; }

    [JsonPropertyName("target")]
    public EmailTarget Target { get; set; }
}

public partial class Status
{
    [JsonPropertyName("0")]
    public Status0 The0 { get; set; }
}

public partial class Status0
{
    [JsonPropertyName("msg")]
    public string Msg { get; set; }
}

public partial class EmailTarget
{
    [JsonPropertyName("0")]
    public Target0 The0 { get; set; }
}

public partial class Target0
{
    [JsonPropertyName("name")]
    public string Name { get; set; }
}

public partial class Http
{
    [JsonPropertyName("httpsPort")]
    public long HttpsPort { get; set; }

    [JsonPropertyName("httpEnabled")]
    public bool HttpEnabled { get; set; }

    [JsonPropertyName("httpPort")]
    public long HttpPort { get; set; }
}

public partial class ConfLdap
{
    [JsonPropertyName("adminGroup")]
    public string AdminGroup { get; set; }

    [JsonPropertyName("mode")]
    public string Mode { get; set; }

    [JsonPropertyName("controlGroup")]
    public string ControlGroup { get; set; }

    [JsonPropertyName("enabledGroup")]
    public string EnabledGroup { get; set; }

    [JsonPropertyName("port")]
    public long Port { get; set; }

    [JsonPropertyName("password")]
    public object Password { get; set; }

    [JsonPropertyName("groupId")]
    public string GroupId { get; set; }

    [JsonPropertyName("securityType")]
    public string SecurityType { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("bindDn")]
    public string BindDn { get; set; }

    [JsonPropertyName("baseDn")]
    public string BaseDn { get; set; }

    [JsonPropertyName("userIdNum")]
    public string UserIdNum { get; set; }

    [JsonPropertyName("userFilter")]
    public string UserFilter { get; set; }

    [JsonPropertyName("userId")]
    public string UserId { get; set; }

    [JsonPropertyName("passwordSet")]
    public bool PasswordSet { get; set; }

    [JsonPropertyName("groupFilter")]
    public string GroupFilter { get; set; }

    [JsonPropertyName("groupMemberUid")]
    public string GroupMemberUid { get; set; }

    [JsonPropertyName("host")]
    public string Host { get; set; }
}

public partial class Locale
{
    [JsonPropertyName("defaultLang")]
    public string DefaultLang { get; set; }

    [JsonPropertyName("units")]
    public string Units { get; set; }
}

public partial class Network
{
    [JsonPropertyName("port1")]
    public Port Port1 { get; set; }

    [JsonPropertyName("ethernet")]
    public Ethernet Ethernet { get; set; }

    [JsonPropertyName("port0")]
    public Port Port0 { get; set; }
}

public partial class Ethernet
{
    [JsonPropertyName("stp")]
    public EthernetStp Stp { get; set; }

    [JsonPropertyName("ports")]
    public string[] Ports { get; set; }

    [JsonPropertyName("address")]
    public Address Address { get; set; }

    [JsonPropertyName("dhcpOn")]
    public bool DhcpOn { get; set; }

    [JsonPropertyName("ip6GW")]
    public string Ip6Gw { get; set; }

    [JsonPropertyName("dns")]
    public Dns Dns { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("macAddr")]
    public string MacAddr { get; set; }

    [JsonPropertyName("order")]
    public long Order { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("label")]
    public string Label { get; set; }

    [JsonPropertyName("route")]
    public Route Route { get; set; }

    [JsonPropertyName("removable")]
    public bool Removable { get; set; }

    [JsonPropertyName("ip4GW")]
    public string Ip4Gw { get; set; }

    [JsonPropertyName("type")]
    public string Type { get; set; }

    [JsonPropertyName("link")]
    public EthernetLink Link { get; set; }
}

public partial class Address
{
    [JsonPropertyName("1")]
    public The1 The1 { get; set; }
}

public partial class The1
{
    [JsonPropertyName("mutable")]
    public bool Mutable { get; set; }

    [JsonPropertyName("prefix")]
    public long Prefix { get; set; }

    [JsonPropertyName("address")]
    public string Address { get; set; }
}

public partial class Dns
{
    [JsonPropertyName("0")]
    public Dns0 The0 { get; set; }
}

public partial class Dns0
{
    [JsonPropertyName("mutable")]
    public bool Mutable { get; set; }

    [JsonPropertyName("address")]
    public string Address { get; set; }
}

public partial class EthernetLink
{
    [JsonPropertyName("stat")]
    public Stat Stat { get; set; }

    [JsonPropertyName("uptime")]
    public long Uptime { get; set; }

    [JsonPropertyName("state")]
    public string State { get; set; }
}

public partial class Stat
{
    [JsonPropertyName("txDropped")]
    public long TxDropped { get; set; }

    [JsonPropertyName("txCount")]
    public long TxCount { get; set; }

    [JsonPropertyName("rxDropped")]
    public long RxDropped { get; set; }

    [JsonPropertyName("rxCount")]
    public long RxCount { get; set; }
}

public partial class Route
{
    [JsonPropertyName("0")]
    public Route0 The0 { get; set; }
}

public partial class Route0
{
    [JsonPropertyName("interface")]
    public string Interface { get; set; }

    [JsonPropertyName("mutable")]
    public bool Mutable { get; set; }

    [JsonPropertyName("gateway")]
    public string Gateway { get; set; }

    [JsonPropertyName("prefix")]
    public long Prefix { get; set; }

    [JsonPropertyName("destination")]
    public string Destination { get; set; }
}

public partial class EthernetStp
{
    [JsonPropertyName("maxAge")]
    public long MaxAge { get; set; }

    [JsonPropertyName("bridgePriority")]
    public long BridgePriority { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("helloTime")]
    public long HelloTime { get; set; }

    [JsonPropertyName("maxHops")]
    public long MaxHops { get; set; }

    [JsonPropertyName("mode")]
    public string Mode { get; set; }

    [JsonPropertyName("forwardDelay")]
    public long ForwardDelay { get; set; }
}

public partial class Port
{
    [JsonPropertyName("stp")]
    public Port0Stp Stp { get; set; }

    [JsonPropertyName("address")]
    public Action Address { get; set; }

    [JsonPropertyName("bridge")]
    public string Bridge { get; set; }

    [JsonPropertyName("dhcpOn")]
    public bool DhcpOn { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("macAddr")]
    public string MacAddr { get; set; }

    [JsonPropertyName("order")]
    public long Order { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("label")]
    public string Label { get; set; }

    [JsonPropertyName("removable")]
    public bool Removable { get; set; }

    [JsonPropertyName("type")]
    public string Type { get; set; }

    [JsonPropertyName("link")]
    public Port0Link Link { get; set; }
}

public partial class Port0Link
{
    [JsonPropertyName("supportedModes")]
    public string[] SupportedModes { get; set; }

    [JsonPropertyName("speed")]
    public string Speed { get; set; }

    [JsonPropertyName("state")]
    public string State { get; set; }

    [JsonPropertyName("duplex")]
    public string Duplex { get; set; }

    [JsonPropertyName("uptime")]
    public long Uptime { get; set; }

    [JsonPropertyName("stat")]
    public Stat Stat { get; set; }
}

public partial class Port0Stp
{
    [JsonPropertyName("state")]
    public string State { get; set; }

    [JsonPropertyName("cost")]
    public long Cost { get; set; }

    [JsonPropertyName("role")]
    public string Role { get; set; }
}

public partial class Oneview
{
    [JsonPropertyName("password")]
    public object Password { get; set; }

    [JsonPropertyName("passwordSet")]
    public bool PasswordSet { get; set; }

    [JsonPropertyName("username")]
    public string Username { get; set; }

    [JsonPropertyName("auto")]
    public Auto Auto { get; set; }

    [JsonPropertyName("mode")]
    public string Mode { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }
}

public partial class Auto
{
    [JsonPropertyName("downstreamInterface")]
    public string DownstreamInterface { get; set; }

    [JsonPropertyName("upstreamInterface")]
    public string UpstreamInterface { get; set; }

    [JsonPropertyName("prefix")]
    public long Prefix { get; set; }

    [JsonPropertyName("address")]
    public string Address { get; set; }
}

public partial class RemoteAuth
{
    [JsonPropertyName("radius")]
    public Radius Radius { get; set; }

    [JsonPropertyName("tacacs")]
    public Tacacs Tacacs { get; set; }

    [JsonPropertyName("mode")]
    public string Mode { get; set; }

    [JsonPropertyName("ldap")]
    public RemoteAuthLdap Ldap { get; set; }
}

public partial class RemoteAuthLdap
{
    [JsonPropertyName("mode")]
    public string Mode { get; set; }

    [JsonPropertyName("controlGroup")]
    public string ControlGroup { get; set; }

    [JsonPropertyName("enabledGroup")]
    public string EnabledGroup { get; set; }

    [JsonPropertyName("adminGroup")]
    public string AdminGroup { get; set; }

    [JsonPropertyName("port")]
    public long Port { get; set; }

    [JsonPropertyName("password")]
    public object Password { get; set; }

    [JsonPropertyName("bindDn")]
    public string BindDn { get; set; }

    [JsonPropertyName("baseDn")]
    public string BaseDn { get; set; }

    [JsonPropertyName("userId")]
    public string UserId { get; set; }

    [JsonPropertyName("userIdNum")]
    public string UserIdNum { get; set; }

    [JsonPropertyName("groupId")]
    public string GroupId { get; set; }

    [JsonPropertyName("userFilter")]
    public string UserFilter { get; set; }

    [JsonPropertyName("securityType")]
    public string SecurityType { get; set; }

    [JsonPropertyName("passwordSet")]
    public bool PasswordSet { get; set; }

    [JsonPropertyName("groupFilter")]
    public string GroupFilter { get; set; }

    [JsonPropertyName("groupMemberUid")]
    public string GroupMemberUid { get; set; }

    [JsonPropertyName("host")]
    public string Host { get; set; }
}

public partial class Radius
{
    [JsonPropertyName("sharedSecretSet")]
    public bool SharedSecretSet { get; set; }

    [JsonPropertyName("enabledGroup")]
    public string EnabledGroup { get; set; }

    [JsonPropertyName("authenticationServer2")]
    public string AuthenticationServer2 { get; set; }

    [JsonPropertyName("accountingServer1")]
    public string AccountingServer1 { get; set; }

    [JsonPropertyName("adminGroup")]
    public string AdminGroup { get; set; }

    [JsonPropertyName("groupAttribute")]
    public string GroupAttribute { get; set; }

    [JsonPropertyName("sharedSecret")]
    public object SharedSecret { get; set; }

    [JsonPropertyName("authenticationServer1")]
    public string AuthenticationServer1 { get; set; }

    [JsonPropertyName("controlGroup")]
    public string ControlGroup { get; set; }

    [JsonPropertyName("accountingServer2")]
    public string AccountingServer2 { get; set; }
}

public partial class Tacacs
{
    [JsonPropertyName("sharedSecretSet")]
    public bool SharedSecretSet { get; set; }

    [JsonPropertyName("service")]
    public string Service { get; set; }

    [JsonPropertyName("controlAttribute")]
    public string ControlAttribute { get; set; }

    [JsonPropertyName("authenticationServer2")]
    public string AuthenticationServer2 { get; set; }

    [JsonPropertyName("enabledAttribute")]
    public string EnabledAttribute { get; set; }

    [JsonPropertyName("adminAttribute")]
    public string AdminAttribute { get; set; }

    [JsonPropertyName("sharedSecret")]
    public object SharedSecret { get; set; }

    [JsonPropertyName("authenticationServer1")]
    public string AuthenticationServer1 { get; set; }

    [JsonPropertyName("accountingServer2")]
    public string AccountingServer2 { get; set; }

    [JsonPropertyName("accountingServer1")]
    public string AccountingServer1 { get; set; }
}

public partial class Serial
{
    [JsonPropertyName("stopBits")]
    public long StopBits { get; set; }

    [JsonPropertyName("parity")]
    public string Parity { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("dataBits")]
    public long DataBits { get; set; }

    [JsonPropertyName("baudRate")]
    public long BaudRate { get; set; }
}

public partial class Snmp
{
    [JsonPropertyName("port")]
    public long Port { get; set; }

    [JsonPropertyName("readCommunity")]
    public string ReadCommunity { get; set; }

    [JsonPropertyName("v3Enabled")]
    public bool V3Enabled { get; set; }

    [JsonPropertyName("trapCommunity")]
    public string TrapCommunity { get; set; }

    [JsonPropertyName("engineId")]
    public string EngineId { get; set; }

    [JsonPropertyName("v1v2cEnabled")]
    public bool V1V2CEnabled { get; set; }

    [JsonPropertyName("writeCommunity")]
    public string WriteCommunity { get; set; }

    [JsonPropertyName("user")]
    public Dictionary<string, User> User { get; set; }

    [JsonPropertyName("target")]
    public Action Target { get; set; }
}

public partial class User
{
    [JsonPropertyName("privPassword")]
    public object PrivPassword { get; set; }

    [JsonPropertyName("type")]
    public string Type { get; set; }

    [JsonPropertyName("username")]
    public string Username { get; set; }

    [JsonPropertyName("privPasswordSet")]
    public bool PrivPasswordSet { get; set; }

    [JsonPropertyName("privType")]
    public string PrivType { get; set; }

    [JsonPropertyName("authPassword")]
    public object AuthPassword { get; set; }

    [JsonPropertyName("authType")]
    public string AuthType { get; set; }

    [JsonPropertyName("authPasswordSet")]
    public bool AuthPasswordSet { get; set; }
}

public partial class Ssh
{
    [JsonPropertyName("port")]
    public long Port { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }
}

public partial class Syslog
{
    [JsonPropertyName("port")]
    public long Port { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }

    [JsonPropertyName("target")]
    public string Target { get; set; }
}

public partial class SystemClass
{
    [JsonPropertyName("ip4Enabled")]
    public bool Ip4Enabled { get; set; }

    [JsonPropertyName("hostname")]
    public string Hostname { get; set; }

    [JsonPropertyName("ip6Enabled")]
    public bool Ip6Enabled { get; set; }

    [JsonPropertyName("factoryAccessEnabled")]
    public bool FactoryAccessEnabled { get; set; }

    [JsonPropertyName("label")]
    public string Label { get; set; }
}

public partial class Time
{
    [JsonPropertyName("ntpServer1")]
    public string NtpServer1 { get; set; }

    [JsonPropertyName("mode")]
    public string Mode { get; set; }

    [JsonPropertyName("ntpServer2")]
    public string NtpServer2 { get; set; }

    [JsonPropertyName("datetime")]
    public DateTimeOffset Datetime { get; set; }

    [JsonPropertyName("zone")]
    public string Zone { get; set; }
}

public partial class Usb
{
    [JsonPropertyName("dev")]
    public Action Dev { get; set; }

    [JsonPropertyName("enabled")]
    public bool Enabled { get; set; }
}


public partial class A0Ae260C851900C3Alarm
{
    [JsonPropertyName("severity")]
    public string Severity { get; set; }

    [JsonPropertyName("state")]
    public string State { get; set; }
}

public partial class A0Ae260C851900C3Conf
{
    [JsonPropertyName("outletControlEnabled")]
    public bool OutletControlEnabled { get; set; }
}






public partial class Breaker0Point
{
    [JsonPropertyName("lossOfLoadDetected")]
    public PseCompliant LossOfLoadDetected { get; set; }
}

public partial class PseCompliant
{
    [JsonPropertyName("value")]
    public bool Value { get; set; }
}


public partial class A0Ae260C851900C3Point
{
    [JsonPropertyName("pseCompliant")]
    public PseCompliant PseCompliant { get; set; }

    [JsonPropertyName("meterType")]
    public MeterType MeterType { get; set; }
}

public partial class MeterType
{
    [JsonPropertyName("value")]
    public string Value { get; set; }
}

public partial class Sys
{
    [JsonPropertyName("model")]
    public string Model { get; set; }

    [JsonPropertyName("build")]
    public string Build { get; set; }

    [JsonPropertyName("appVersion")]
    public string AppVersion { get; set; }

    [JsonPropertyName("version")]
    public string Version { get; set; }

    [JsonPropertyName("serialNumber")]
    public string SerialNumber { get; set; }

    [JsonPropertyName("oem")]
    public string Oem { get; set; }

    [JsonPropertyName("apiVersion")]
    public string ApiVersion { get; set; }

    [JsonPropertyName("partNumber")]
    public string PartNumber { get; set; }

    [JsonPropertyName("label")]
    public string Label { get; set; }

    [JsonPropertyName("name")]
    public string Name { get; set; }

    [JsonPropertyName("platform")]
    public string Platform { get; set; }

    [JsonPropertyName("contact")]
    public Contact Contact { get; set; }

    [JsonPropertyName("locale")]
    public Locale Locale { get; set; }

    [JsonPropertyName("state")]
    public State State { get; set; }

    [JsonPropertyName("modelNumber")]
    public string ModelNumber { get; set; }

    [JsonPropertyName("component")]
    public Dictionary<string, Component> Component { get; set; }
}

public partial class Component
{
    [JsonPropertyName("type")]
    public string Type { get; set; }

    [JsonPropertyName("sn")]
    public string Sn { get; set; }

    [JsonPropertyName("version")]
    public string Version { get; set; }

    [JsonPropertyName("state")]
    public string State { get; set; }
}

public partial class State
{
    [JsonPropertyName("uptime")]
    public long Uptime { get; set; }

    [JsonPropertyName("warnCount")]
    public long WarnCount { get; set; }

    [JsonPropertyName("alarmCount")]
    public long AlarmCount { get; set; }

    [JsonPropertyName("adminExists")]
    public bool AdminExists { get; set; }

    [JsonPropertyName("guestEnabled")]
    public bool GuestEnabled { get; set; }

    [JsonPropertyName("localTime")]
    public DateTimeOffset LocalTime { get; set; }

    [JsonPropertyName("component")]
    public string Component { get; set; }

    [JsonPropertyName("dirty")]
    public long Dirty { get; set; }

    [JsonPropertyName("systemTime")]
    public long SystemTime { get; set; }

    [JsonPropertyName("alarm")]
    public A0Ae260C851900C3Alarm Alarm { get; set; }
}

internal static class Converter
{
    public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)
    {
        Converters =
        {
            new DateOnlyConverter(),
            new TimeOnlyConverter(),
            IsoDateTimeOffsetConverter.Singleton
        },
    };
}

internal class ParseStringConverter : JsonConverter<long>
{
    public override bool CanConvert(Type t) => t == typeof(long);

    public override long Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
        var value = reader.GetString();
        long l;
        if (Int64.TryParse(value, out l))
        {
            return l;
        }
        throw new Exception("Cannot unmarshal type long");
    }

    public override void Write(Utf8JsonWriter writer, long value, JsonSerializerOptions options)
    {
        JsonSerializer.Serialize(writer, value.ToString(), options);
        return;
    }

    public static readonly ParseStringConverter Singleton = new ParseStringConverter();
}

public class DateOnlyConverter : JsonConverter<DateOnly>
{
    private readonly string serializationFormat;
    public DateOnlyConverter() : this(null) { }

    public DateOnlyConverter(string? serializationFormat)
    {
        this.serializationFormat = serializationFormat ?? "yyyy-MM-dd";
    }

    public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
        var value = reader.GetString();
        return DateOnly.Parse(value!);
    }

    public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.ToString(serializationFormat));
}

public class TimeOnlyConverter : JsonConverter<TimeOnly>
{
    private readonly string serializationFormat;

    public TimeOnlyConverter() : this(null) { }

    public TimeOnlyConverter(string? serializationFormat)
    {
        this.serializationFormat = serializationFormat ?? "HH:mm:ss.fff";
    }

    public override TimeOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
        var value = reader.GetString();
        return TimeOnly.Parse(value!);
    }

    public override void Write(Utf8JsonWriter writer, TimeOnly value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.ToString(serializationFormat));
}

internal class IsoDateTimeOffsetConverter : JsonConverter<DateTimeOffset>
{
    public override bool CanConvert(Type t) => t == typeof(DateTimeOffset);

    private const string DefaultDateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK";

    private DateTimeStyles _dateTimeStyles = DateTimeStyles.RoundtripKind;
    private string? _dateTimeFormat;
    private CultureInfo? _culture;

    public DateTimeStyles DateTimeStyles
    {
        get => _dateTimeStyles;
        set => _dateTimeStyles = value;
    }

    public string? DateTimeFormat
    {
        get => _dateTimeFormat ?? string.Empty;
        set => _dateTimeFormat = (string.IsNullOrEmpty(value)) ? null : value;
    }

    public CultureInfo Culture
    {
        get => _culture ?? CultureInfo.CurrentCulture;
        set => _culture = value;
    }

    public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)
    {
        string text;


        if ((_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal
                || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
        {
            value = value.ToUniversalTime();
        }

        text = value.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture);

        writer.WriteStringValue(text);
    }

    public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    {
        string? dateText = reader.GetString();

        if (string.IsNullOrEmpty(dateText) == false)
        {
            if (!string.IsNullOrEmpty(_dateTimeFormat))
            {
                return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);
            }
            else
            {
                return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);
            }
        }
        else
        {
            return default(DateTimeOffset);
        }
    }


    public static readonly IsoDateTimeOffsetConverter Singleton = new IsoDateTimeOffsetConverter();
}
#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
